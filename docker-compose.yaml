services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres       # Должно совпадать с spring.datasource.username
      POSTGRES_PASSWORD: qwerty    # Должно совпадать с spring.datasource.password
      POSTGRES_DB: moon
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d moon"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: openjdk:23-jdk-slim
    container_name: moon-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/moon
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: qwerty
    volumes:
      - ./backend:/app
    working_dir: /app
    command: ./mvnw spring-boot:run
    ports:
      - "8080:8080"
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: moon-nginx
    ports:
      - "80:80"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
